---
import type { HTMLAttributes } from 'astro/types'
import type { Page } from 'astro'

import LeftArrow from './icons/left.svg'
import RightArrow from './icons/right.svg'

interface Props extends HTMLAttributes<'nav'> {
  page: Page
}

const { page, ...props } = Astro.props
---

<nav {...props}>
  {
    page.url.prev && (
      <a href={page.url.prev}>
        <LeftArrow class="icon" aria-label="Previous" />
      </a>
    )
  }
  {
    Array.from({ length: page.lastPage }, (_, i) => i + 1).map(num => {
      const baseUrl =
        page.url.first ??
        (page.lastPage === 1 ? page.url.last : page.url.last?.replace(/\/\d+$/, '')) ??
        page.url.current
      return (
        <a
          class:list={[{ active: num === page.currentPage }]}
          href={num === 1 ? baseUrl : baseUrl.replace(/\/?$/, `/${num}`)}
        >
          {num}
        </a>
      )
    })
  }
  {
    page.url.next && (
      <a href={page.url.next}>
        <RightArrow class="icon" aria-label="Next" />
      </a>
    )
  }
</nav>

<style>
  nav {
    display: flex;
    place-items: center;
    place-content: center;
    gap: 0.5rem;
    color: var(--c-text);
    font-size: 1rem;
    font-weight: 500;

    a {
      width: 1.5rem;
      height: 1.5rem;
      display: flex;
      place-items: center;
      place-content: center;
      border-radius: 0.2rem;
      transition: transform 0.2s ease-in-out;

      svg {
        stroke: currentcolor;
      }

      &.active {
        background: var(--c-bg-mute);
      }

      &:not(.active):hover {
        transform: scale(1.2);
      }
    }
  }
</style>
