---
import type { HTMLAttributes } from 'astro/types'

import FormattedCategory from './utils/FormattedCategory.astro'
import FormattedDate from './utils/FormattedDate.astro'

interface Props extends HTMLAttributes<'header'> {
  title: string
  category?: string
  pubDate?: Date
  updDate?: Date
  words?: number
}

const { title, category, pubDate, updDate, words, ...props } = Astro.props
---

<header {...props}>
  <h1 data-pagefind-meta="title">{title}</h1>
  {
    category && (
      <div class="category">
        <span>
          「 <FormattedCategory category={category} data-pagefind-filter="category" /> 」
        </span>
      </div>
    )
  }
  {
    (pubDate ?? updDate ?? words) && (
      <div class="info">
        <div>
          {pubDate && (
            <span>
              Publish: <FormattedDate date={pubDate} data-pagefind-sort="pubdate[datetime]" />
            </span>
          )}
          {updDate && (
            <span>
              Update: <FormattedDate date={updDate} data-pagefind-sort="upddate[datetime]" />
            </span>
          )}
        </div>
        <div>{words && <span>{words} words</span>}</div>
      </div>
    )
  }
</header>

<style>
  header {
    margin: 1rem 0;
    display: flex;
    flex-direction: column;
    place-items: center;
    gap: 1rem;
    cursor: default;

    h1 {
      font-size: 1.6rem;
      font-weight: 500;
      color: var(--c-text);
      text-align: center;
      text-wrap: balance;
      padding: 0 1rem;
    }

    .category {
      font-size: 1.1rem;
      color: var(--c-text-bland);

      span:hover {
        color: var(--c-text);
      }
    }

    .info {
      font-size: 0.9rem;
      color: var(--c-text-bland);
      width: 100%;
      justify-content: space-between;

      &,
      & > div {
        display: flex;
        flex-wrap: wrap;
        gap: 0 0.5rem;
      }
    }
  }
</style>
