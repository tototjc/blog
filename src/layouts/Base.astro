---
import { ClientRouter } from 'astro:transitions'

import LoadingProgress from '@/components/LoadingProgress.astro'

import '@/styles/global.css'

import { SITE_TITLE, SITE_DESCRIPTION } from '@/consts'

interface Props {
  title?: string
  description?: string
}

const {
  props: { title = SITE_TITLE, description = SITE_DESCRIPTION },
  site = 'https://example.com/',
  url,
  generator,
  currentLocale,
} = Astro
---

<!doctype html>
<html lang={currentLocale}>
  <head>
    <title>{title}</title>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=auto" />
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="generator" content={generator} />
    <meta name="color-scheme" content="light dark" />

    <link rel="icon" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={new URL(url.pathname, site)} />
    <link rel="alternate" type="application/rss+xml" title={SITE_TITLE} href={new URL('rss.xml', site)} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />

    <slot name="head" />

    <ClientRouter />
  </head>
  <body>
    <LoadingProgress />
    <slot />
  </body>
</html>

<style>
  html {
    accent-color: var(--c-primary);
    direction: ltr;
    font: normal 1rem/1.5 var(--font-default);
    font-optical-sizing: auto;
    interpolate-size: allow-keywords;
    text-rendering: optimizelegibility;
    text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-tap-highlight-color: transparent;
    scroll-behavior: smooth;
    overflow-anchor: auto;
    overflow: hidden auto;

    body {
      width: 100vw;
      position: absolute;
      padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
      background: var(--c-bg);
    }
  }
</style>
