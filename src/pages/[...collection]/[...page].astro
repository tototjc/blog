---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'

import { postlist } from 'virtual:config'

import { posts, groups } from '@/utils/getContents'

import GeneralLayout from '@/layouts/General.astro'

import FormattedCategories from '@/components/utils/FormattedCategories.astro'
import FormattedDate from '@/components/utils/FormattedDate.astro'
import Pagination from '@/components/Pagination.astro'

export const getStaticPaths = (({ paginate }) => [
  ...paginate(posts, {
    params: { collection: undefined },
    props: { filterLabel: undefined },
    pageSize: postlist.pageSize,
  }),
  ...groups.flatMap(({ path: groupPath, title: groupTitle, group }) =>
    group.flatMap(({ path: collectionPath, title: collectionTitle, collection }) =>
      paginate(collection, {
        params: { collection: `${groupPath}/${collectionPath}` },
        props: { filterLabel: [groupTitle, collectionTitle] },
        pageSize: postlist.pageSize,
      }),
    ),
  ),
]) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const {
  props: { page, filterLabel },
  currentLocale,
} = Astro

const dateFormatter = new Intl.DateTimeFormat(currentLocale ?? 'zh-CN', {
  dateStyle: 'short',
}).format
---

<GeneralLayout title={filterLabel?.toReversed().join(' | ')}>
  {filterLabel && <h1>{filterLabel.join(' - ')}</h1>}
  <ul>
    {
      page.data.map(({ id, data: { title, description, categories, pubDate, updDate } }) => {
        const date = updDate ?? pubDate
        const categoriesWithSlug = categories?.map(category => ({
          name: category,
          slug: `/category/${category}`,
        })) || [
          {
            name: 'Others',
            slug: '/categories/others',
          },
        ]
        return (
          <li>
            <a href={import.meta.env.BASE_URL + id}>
              <span>{title}</span>
            </a>
            {description && <div>{description}</div>}
            {(categories ?? date) && (
              <div>
                {date && <FormattedDate date={date} formatter={dateFormatter} />}
                {categories && <FormattedCategories categories={categoriesWithSlug} />}
              </div>
            )}
          </li>
        )
      })
    }
  </ul>
  <Pagination {page} />
</GeneralLayout>

<style>
  h1 {
    font-size: 1.8rem;
    font-weight: 500;
    color: var(--c-text);
    text-align: center;
    text-wrap: balance;
    padding: 0.25rem 1rem;
    cursor: default;
  }

  ul {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    list-style: none;
    color: var(--c-text);
    cursor: default;

    li {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;

      & > a {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        font-size: 1.2rem;
        font-weight: 500;
      }

      & > div {
        display: flex;
        flex-wrap: wrap;
        font-weight: 400;
        font-size: 1rem;
        gap: 1rem;
      }

      a:hover {
        text-decoration: underline;
      }
    }
  }
</style>
