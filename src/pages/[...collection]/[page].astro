---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'

import { postlist } from 'virtual:config'

import { posts, groups } from '@/utils/getContents'

import GeneralLayout from '@/layouts/General.astro'

import PostList from '@/components/PostList.astro'
import Pagination from '@/components/Pagination.astro'

export const getStaticPaths = (({ paginate }) => [
  ...paginate(posts, {
    params: { collection: undefined },
    props: { filterLabel: undefined },
    pageSize: postlist.pageSize,
  }),
  ...groups.flatMap(({ path: groupPath, title: groupTitle, group }) =>
    group.flatMap(({ path: collectionPath, title: collectionTitle, collection }) =>
      paginate(collection, {
        params: { collection: `${groupPath}/${collectionPath}` },
        props: { filterLabel: [groupTitle, collectionTitle] },
        pageSize: postlist.pageSize,
      }),
    ),
  ),
]) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page, filterLabel } = Astro.props
---

<GeneralLayout title={filterLabel?.toReversed().join(' | ')}>
  {filterLabel && <h1>{filterLabel.join(' - ')}</h1>}
  <PostList
    list={page.data.map(({ id, data: { title, description, categories, pubDate, updDate } }) => ({
      link: import.meta.env.BASE_URL + id,
      title,
      description,
      categories,
      date: updDate ?? pubDate,
    }))}
  />
  <Pagination {page} />
</GeneralLayout>

<style>
  h1 {
    font-size: 1.8rem;
    font-weight: 500;
    color: var(--c-text);
    text-align: center;
    text-wrap: balance;
    padding: 0.25rem 1rem;
    cursor: default;
  }
</style>
