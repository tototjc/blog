---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'

import { postlist } from 'virtual:config'

import { posts, groups } from '@/utils/getContents'

import GeneralLayout from '@/layouts/General.astro'

import ArticleHeader from '@/components/ArticleHeader.astro'
import PostList from '@/components/PostList.astro'
import Pagination from '@/components/Pagination.astro'

export const getStaticPaths = (({ paginate }) => [
  ...paginate(posts, {
    params: { path: undefined },
    props: { filterLabel: undefined },
    pageSize: postlist.pageSize,
  }),
  ...groups.flatMap(({ path: groupPath, title: groupTitle, group }) =>
    group.flatMap(({ path: collectionPath, title: collectionTitle, collection }) =>
      paginate(collection, {
        params: { path: `${groupPath}/${collectionPath}` },
        props: { filterLabel: [groupTitle, collectionTitle] },
        pageSize: postlist.pageSize,
      }),
    ),
  ),
]) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page, filterLabel } = Astro.props
---

<GeneralLayout title={filterLabel?.toReversed().join(' | ')}>
  {filterLabel && <ArticleHeader title={filterLabel.join(' - ')} />}
  <PostList
    list={page.data.map(entry => ({
      link: import.meta.env.BASE_URL + entry.id,
      ...entry.data,
    }))}
  />
  <Pagination {page} />
</GeneralLayout>
