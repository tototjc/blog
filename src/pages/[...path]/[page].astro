---
import type { InferGetStaticPropsType, InferGetStaticParamsType, GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import MdAdditionalInfo from '@/utils/getMdAdditionalInfo'

import BaseLayout from '@/layouts/BaseLayout.astro'
import PostList from '@/components/PostList.astro'
import PostFilterMsg from '@/components/PostFilterMsg.astro'
import PageNum from '@/components/PageNum.astro'

import { SITE_TITLE } from '@/consts'

type Props = InferGetStaticPropsType<typeof getStaticPaths>
type Params = InferGetStaticParamsType<typeof getStaticPaths>

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection('blog', ({ id }) => id.startsWith('post/'))

  const postList = allPosts
    .map(entry => ({ link: entry.id, ...entry.data, summary: new MdAdditionalInfo(entry.body ?? '').getSummary() }))
    .sort((a, b) => (b.pubDate ?? 0).valueOf() - (a.pubDate ?? 0).valueOf())

  const groupedPostList = new Map([
    ['archive', Map.groupBy(postList, post => post.pubDate?.getFullYear().toString() ?? 'others')],
    ['category', Map.groupBy(postList, post => post.category ?? 'others')],
  ])

  const allPages = paginate(postList, {
    pageSize: 5,
  })

  const groupedPages = Array.from(groupedPostList, ([sort, group]) =>
    Array.from(group, ([label, posts]) =>
      paginate(posts, {
        params: { path: `${sort}/${label}` },
        pageSize: 5,
      }),
    ),
  ).flat(2)

  return [...allPages, ...groupedPages]
}) satisfies GetStaticPaths

const { page } = Astro.props

const { path } = Astro.params as Params
---

<BaseLayout>
  <h1>{SITE_TITLE}</h1>
  {path && <PostFilterMsg class="msg" name={path} />}
  <PostList class="posts" list={page.data} />
  <PageNum class="paginate" paginate={page} />
</BaseLayout>

<style>
  h1 {
    display: block;
    text-align: center;
    margin: 2rem 0;
    color: var(--c-primary);
    font-size: 1.8rem;
    font-weight: 400;
    cursor: default;
  }

  .msg {
    margin: 1rem 0;
  }

  .posts {
    min-height: 50vh;
  }

  .paginate {
    margin-top: 2rem;
  }
</style>
